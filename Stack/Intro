#include <iostream>

#define MAX 1000
using namespace std;


class stack
{
    int top=-1,a[MAX];
    public:
    stack(int n,int A[])
    {
        top=n-1;
        for(int i=0;i<n;i++)
        {
            a[i]=A[i];
        }

    }
    void push(int x)
    {
        if(top!=MAX)
        {
            top++;
            a[top]=x;
        }
        else
        {
            cout<<"Stack is Full!"<<endl;
        }

    }
    int pop()
    {
        if(!isEmpty())
        {
            int x=a[top];
            top--;
            return x;
        }
        else
        {
            cout<<"Stack is empty"<<endl;
            return -1;
        }
    }
    int peek()
    {
        if(!isEmpty())
        return a[top];
        else
        {
            cout<<"Stack is Empty"<<endl;
            return -1;
        }
    }
    bool isEmpty()
    {
        if(top<0)
            return true;
        else
            return false;
    }
    void display()
    {
        for(int i=0;i<=top;i++)
            cout<<a[i]<<" ";
        cout<<endl;
    }
};
int main()
{
    int n;
    cout<<"Enter number of elements"<<endl;
    cin>>n;
    int A[n];
    cout<<"Enter elements"<<endl;
    for(int i=0;i<n;i++)
            cin>>A[i];
    stack s(n,A);
    s.display();
    s.push(11);
    s.push(12);
    s.display();
    s.pop();
    s.display();
    s.isEmpty();
    return 0;
}
