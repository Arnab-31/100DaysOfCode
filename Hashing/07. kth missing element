Question link: https://www.geeksforgeeks.org/k-th-missing-element-in-an-unsorted-array/\

Solution: 

#include <bits/stdc++.h>
using namespace std;

int kth_missing(int arr[], int n, int k)
{
	unordered_set<int> s;

	int max = arr[0], min = arr[0];

	for(int i=1;i<n;i++){
        if(arr[i]>max)
            max=arr[i];
        if(arr[i]<min)
            min=arr[i];

        s.insert(arr[i]);
	}

	int count=0;
	for(int i=min+1;i<max;i++){
        if(s.find(i) == s.end())
        {
            count++;
            if(count==k)
                return i;
        }
	}

	return -1;
}



// Driver code
int main()
{
	int arr[] = { 1, 3, 4, 9};
	int n = sizeof(arr) / sizeof(arr[0]);
	int k=5;
	cout << kth_missing(arr, n, k) << endl;
	return 0;
}
